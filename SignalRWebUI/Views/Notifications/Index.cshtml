@model List<ResultNotificationDto>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/AdminLayout/Index.cshtml";
}

<div class="content">
    <div class="container-fluid">
        <h4 class="page-title">Bildirim İşlemleri</h4>
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <div class="card-title">Bildirim Listesi</div>
                    </div>
                    <div class="card-body">
                        <div class="card-sub">
                            Bildirim ile ilgili işlemleri aşağıdan gerçekleştirebilirsiniz.
                        </div>
                        <div id="notificationListContainer"></div>
                        <table class="table mt-3">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Açıklama</th>
                                    <th scope="col">Tarih</th>
                                    <th scope="col">Durumu</th>
                                    <th scope="col">Sil</th>
                                    <th scope="col">Güncelle</th>
                                    <th scope="col">Okundu İşaretle</th>
                                    <th scope="col">Okunmadı İşaretle</th>
                                </tr>
                            </thead>
                            <tbody id="notificationList">
                            </tbody>
                        </table>
                        <a href="/Notifications/CreateNotification/" class="btn btn-outline-primary">Yeni Bildirim Girişi</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="connstatus"></div>
<script type="text/javascript">
    $(document).ready(() => {
        var connection = new signalR.HubConnectionBuilder().withUrl("https://localhost:7199/SignalRHub").build();
        $("#connstatus").text(connection.state);

        // Bağlantı durumunu kontrol et
        connection.start().then(() => {
            $("#connstatus").text(connection.state);
            setInterval(() => {
                connection.invoke("SendNotification");
            }, 2000);
        }).catch((err) => {
            console.log(err);
        });

        // öne çıkan listesi alındığında tabloyu güncelle
        connection.on("ReceiveNotificationList", (notifications) => {
            let tableHtml = '';
            notifications.forEach((notification, index) => {

                tableHtml += `
                                            <tr>
                                                <th>${index + 1}</th>
                                                <td>${notification.description}</td>
                                                <td>${notification.date}</td>
                                                <td>${notification.status ? 'Aktif' : 'Pasif'}</td>
                                                <td><a href="/Notifications/DeleteNotification/${notification.notificationId}" class="btn btn-outline-danger">Sil</a></td>
                                                <td><a href="/Notifications/UpdateNotification/${notification.notificationId}" class="btn btn-outline-success">Güncelle</a></td>
                                                <td><a href="/Notifications/NotificationStatusChangeToTrue/${notification.notificationId}" class="btn btn-outline-warning">Okundu</a></td>
                                                <td><a href="/Notifications/NotificationStatusChangeToFalse/${notification.notificationId}" class="btn btn-outline-secondary">Okunmadı</a></td>
                                            </tr>`;
            });
            $("#notificationList").html(tableHtml);
        });
    });
</script>

